public static ArrayList<Integer> nodeToRootPath(Node node, int data) {
    if (node.data == data) {
      ArrayList<Integer> path = new ArrayList<>();
      path.add(node.data);
      return path;
    }

    for (Node child : node.children) {
      ArrayList<Integer> ptc = nodeToRootPath(child, data);
      if (ptc.size() > 0) {
        ptc.add(node.data);
        return ptc;
      }
    }

    return new ArrayList<>();
  }

  public static int lca(Node node, int d1, int d2) {
ArrayList<Integer> list1 = nodeToRootPath(node, d1);
    ArrayList<Integer> list2 = nodeToRootPath(node, d2);

    int i = list1.size() - 1;
    int j = list2.size() - 1;

    while(i >= 0 && j >= 0 && list1.get(i) == list2.get(j)){
      i--;
      j--;
    }

    return list1.get(i + 1);
     
     
     
  }
