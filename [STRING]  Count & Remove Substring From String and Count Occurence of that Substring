#include <cmath>
#include <cstdio>
#include <vector>
#include <iostream>
#include <algorithm>
using namespace std;
string helper(string& str, string& pat){
    size_t pos = std::string::npos;
    // Search for the substring in string in a loop untill nothing is found
    while ((pos  = str.find(pat) )!= std::string::npos)
    {
        // If found then erase it from string
        str.erase(pos, pat.length());
    }
    return str;
}

int solve(string& str, string& pat){
   int count = 0 ;
    size_t pos = 0;
    while((pos = str.find(pat,pos))!=string::npos){
        count++;
        pos+=pat.length();
    }
    return count;
    
}

int main() {
    
    string str;
     int i;
    cin>>str>>i;
    string pat = "hi";
   int ans =  solve(str,pat);
    cout<<ans<<endl;
   string ptt = helper(str,pat);
    cout<<ptt[i]<<endl;
    cout<<ptt<<endl;
    
    
    return 0;
}
