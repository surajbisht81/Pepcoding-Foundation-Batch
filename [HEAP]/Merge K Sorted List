import java.io.*;
import java.util.*;
public class Main {
    static class Pair implements Comparable<Pair>{
        ArrayList<Integer> clist;
        int idx;
        Pair(ArrayList<Integer> list){
            this.clist =  list;
            this.idx = 0;
        }
        public int compareTo(Pair other){
            int thisVal =  this.clist.get(this.idx);
            int otherVal =  other.clist.get(other.idx);
            return thisVal - otherVal;
        }
    }

   public static ArrayList<Integer> mergeKSortedLists(ArrayList<ArrayList<Integer>> lists){
      ArrayList<Integer> ans = new ArrayList<>();
      PriorityQueue<Pair> pq = new PriorityQueue<>();

     for(int i  = 0; i<lists.size(); i++){
         Pair cp = new Pair(lists.get(i));
         pq.add(cp);
     }
     while(pq.size()>0){
         Pair minPair = pq.remove();
         ans.add(minPair.clist.get(minPair.idx));
         minPair.idx++;
         if(minPair.idx < minPair.clist.size()){
             pq.add(minPair);
         }
     }

      return ans;
   }

   public static void main(String[] args) throws Exception {
      BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
      int k = Integer.parseInt(br.readLine());
      ArrayList<ArrayList<Integer>> lists = new ArrayList<>();
      for(int i = 0; i < k; i++){
         ArrayList<Integer> list = new ArrayList<>();

         int n = Integer.parseInt(br.readLine());
         String[] elements = br.readLine().split(" ");
         for(int j = 0; j < n; j++){
            list.add(Integer.parseInt(elements[j]));
         }

         lists.add(list);
      }

      ArrayList<Integer> mlist = mergeKSortedLists(lists);
      for(int val: mlist){
         System.out.print(val + " ");
      }
      System.out.println();
   }

}
