Method 1 :
from leetcode



import java.io.*;
import java.util.*;
public class Main {

    public static void main(String[] args) throws Exception {
     
        Scanner scn = new Scanner(System.in);
        int n = scn.nextInt();
        int [] prices = new int[n];
        for(int i = 0; i < n; i++){
           prices[i] = scn.nextInt(); 
        }
        int firstbuy=Integer.MIN_VALUE;
        int firstsell=0;
        int secondbuy=Integer.MIN_VALUE;
        int secondsell=0;
        for(int i=0;i<prices.length; i++)
        {
            firstbuy=Math.max(firstbuy,-prices[i]); //loss of money
            firstsell=Math.max(firstsell,firstbuy+prices[i]); //gain of money
            secondbuy=Math.max(secondbuy,firstsell-prices[i]); //loss of money
            secondsell=Math.max(secondsell,secondbuy+prices[i]); //gain of money
        }
        System.out.println(secondsell);
    }
}


============================== METHOD 2 PEP CODING ONE =========================================================

import java.io.*;
import java.util.*;

public class Main {

    public static void main(String[] args) throws Exception {
        // write your code here
        Scanner scn = new Scanner(System.in);
        int n = scn.nextInt();
        int [] arr = new int[n];
        for(int i = 0; i < n; i++){
           arr[i] = scn.nextInt(); 
        }
        
        int[] left = new int[n];
        int[] right = new int[n];
        
        int min =  arr[0];
        
        for(int i = 1; i<  n; i++){
            if(min >  arr[i]){
                min = arr[i];
            }
            left[i] =  Math.max(left[i-1], arr[i] - min);
        }
        int max = arr[n - 1];
        for(int i  = n-2; i >=0; i--){
            if(max <  arr[i]){
                max = arr[i];
            }
            right[i] = Math.max(right[i+1], max - arr[i]);
        }
        int ans =  left[0] + right[0];
        for(int i = 1; i < n; i++){
            int cp = left[i] + right[i];
            if(ans <  cp)
            {
                ans = cp;
            }
        }
        
        System.out.println(ans);
        
    }

}
