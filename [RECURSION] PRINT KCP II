// using arraylist 
// ASKED IN AMAZON


import java.io.*;
import java.util.*;

public class Main {

    public static void main(String[] args) throws Exception {
    Scanner scn = new Scanner(System.in);
     String str = scn.nextLine();
    ArrayList<String> words = getKPC(str);
        System.out.println(words);
    
    }
    static String[] codes = {".;", "abc", "def", "ghi", "jkl", "mno", "pqrs", "tu", "vwx", "yz"};
    public static ArrayList<String> getKPC(String str) {
          if(str.length() == 0){
            ArrayList<String> bres = new ArrayList<>();
            bres.add("");
            return bres;
        }
        char ch = str.charAt(0);
        String roq = str.substring(1);
        ArrayList<String> resQues = getKPC(roq);
        int idx = str.charAt(0)-'0';
        String code = codes[idx];
        ArrayList<String> myAns = new ArrayList<>();
       for(int i = 0; i<code.length(); i++){
           char chh = code.charAt(i);
           for(int j  = 0; j<resQues.size(); j++){
               myAns.add(chh+resQues.get(j));
           }
               
       }
        return myAns;
        
    }

}



// APPROACH 2 WITH MAP LEETCODE 17

class Solution {
    public List letterCombinations(String digits) {
        List<String> ans = new ArrayList<String>();
    if(digits==null||digits.length()==0) return ans;
    char[][] map = new char[8][];
    map[0]="abc".toCharArray();
    map[1]="def".toCharArray();
    map[2]="ghi".toCharArray();
    map[3]="jkl".toCharArray();
    map[4]="mno".toCharArray();
    map[5]="pqrs".toCharArray();
    map[6]="tuv".toCharArray();
    map[7]="wxyz".toCharArray();
    
    char[] input = digits.toCharArray();
    ans.add("");
    for(char c:input)
        ans=expand(ans,map[c-'2']);
    return ans;
    
    
}
    private List<String> expand(List<String> l,char[] arr)
{
    List<String> next = new ArrayList<String>();
    for(String s:l)
        for(char c:arr)
            next.add(s+c);
    return next;
}
}
