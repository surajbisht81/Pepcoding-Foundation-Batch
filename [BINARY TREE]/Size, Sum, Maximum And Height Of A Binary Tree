  public static int size(Node node) {    
      if(null == node){
          return 0;
      }
      int left = size(node.left);
      int right  = size(node.right);
      int res =  left+right+1;
      return res;
  }
  public static int sum(Node node) {
   if(null == node){
          return 0;
      }
      int left = sum(node.left);
      int right  = sum(node.right);
      int res =  left+right+node.data;
      return res;
  }
  public static int max(Node node) {
    if(node == null){
        return INTEGER_MIN_VALUE;
    }

   int left =  max(node.left);
   int right =  max(node.right);
    int res = Math.max(left,right);
    int ans = Math.max(res,node.data);
    return ans;
  }
  public static int height(Node node) {
      if(node==null){
          return -1;
      }
    return Math.max(1+height(node.left), 1 + height(node.right)); 
  }
